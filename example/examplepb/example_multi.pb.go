// Code generated by protoc-gen-go. DO NOT EDIT.
// source: example/examplepb/example_multi.proto

package examplepb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import _ "github.com/infobloxopen/protoc-gen-atlas-validate/options"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type User2 struct {
	Id   int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *User2) Reset()                    { *m = User2{} }
func (m *User2) String() string            { return proto.CompactTextString(m) }
func (*User2) ProtoMessage()               {}
func (*User2) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *User2) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User2) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type EmptyResponse2 struct {
}

func (m *EmptyResponse2) Reset()                    { *m = EmptyResponse2{} }
func (m *EmptyResponse2) String() string            { return proto.CompactTextString(m) }
func (*EmptyResponse2) ProtoMessage()               {}
func (*EmptyResponse2) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func init() {
	proto.RegisterType((*User2)(nil), "examplepb.User2")
	proto.RegisterType((*EmptyResponse2)(nil), "examplepb.EmptyResponse2")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Users2 service

type Users2Client interface {
	Create2(ctx context.Context, in *User2, opts ...grpc.CallOption) (*EmptyResponse2, error)
}

type users2Client struct {
	cc *grpc.ClientConn
}

func NewUsers2Client(cc *grpc.ClientConn) Users2Client {
	return &users2Client{cc}
}

func (c *users2Client) Create2(ctx context.Context, in *User2, opts ...grpc.CallOption) (*EmptyResponse2, error) {
	out := new(EmptyResponse2)
	err := grpc.Invoke(ctx, "/examplepb.Users2/Create2", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Users2 service

type Users2Server interface {
	Create2(context.Context, *User2) (*EmptyResponse2, error)
}

func RegisterUsers2Server(s *grpc.Server, srv Users2Server) {
	s.RegisterService(&_Users2_serviceDesc, srv)
}

func _Users2_Create2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User2)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Users2Server).Create2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/examplepb.Users2/Create2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Users2Server).Create2(ctx, req.(*User2))
	}
	return interceptor(ctx, in, info, handler)
}

var _Users2_serviceDesc = grpc.ServiceDesc{
	ServiceName: "examplepb.Users2",
	HandlerType: (*Users2Server)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create2",
			Handler:    _Users2_Create2_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "example/examplepb/example_multi.proto",
}

func init() { proto.RegisterFile("example/examplepb/example_multi.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 290 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x4d, 0xad, 0x48, 0xcc,
	0x2d, 0xc8, 0x49, 0xd5, 0x87, 0xd2, 0x05, 0x49, 0x30, 0x56, 0x7c, 0x6e, 0x69, 0x4e, 0x49, 0xa6,
	0x5e, 0x41, 0x51, 0x7e, 0x49, 0xbe, 0x10, 0x27, 0x5c, 0x5a, 0x4a, 0x26, 0x3d, 0x3f, 0x3f, 0x3d,
	0x27, 0x55, 0x3f, 0xb1, 0x20, 0x53, 0x3f, 0x31, 0x2f, 0x2f, 0xbf, 0x24, 0xb1, 0x24, 0x33, 0x3f,
	0xaf, 0x18, 0xa2, 0x50, 0xca, 0x2f, 0x3d, 0xb3, 0x24, 0xa3, 0x34, 0x49, 0x2f, 0x39, 0x3f, 0x57,
	0x3f, 0x33, 0x2f, 0x2d, 0x3f, 0x29, 0x27, 0xbf, 0x22, 0xbf, 0x20, 0x35, 0x4f, 0x1f, 0x2c, 0x9d,
	0xac, 0x9b, 0x9e, 0x9a, 0xa7, 0x9b, 0x58, 0x92, 0x93, 0x58, 0xac, 0x5b, 0x96, 0x98, 0x93, 0x99,
	0x92, 0x58, 0x92, 0xaa, 0x9f, 0x5f, 0x00, 0x36, 0x40, 0x1f, 0x2c, 0x1c, 0x0f, 0x13, 0x86, 0x98,
	0xa7, 0x64, 0xc7, 0xc5, 0x1a, 0x5a, 0x9c, 0x5a, 0x64, 0x24, 0x24, 0xc6, 0xc5, 0x94, 0x99, 0x22,
	0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0xea, 0xc4, 0x76, 0x6b, 0xbf, 0x24, 0x13, 0x07, 0x43, 0x10, 0x53,
	0x66, 0x8a, 0x90, 0x2c, 0x17, 0x4b, 0x5e, 0x62, 0x6e, 0xaa, 0x04, 0x93, 0x02, 0xa3, 0x06, 0xa7,
	0x13, 0xe7, 0xad, 0xfd, 0x92, 0xac, 0x42, 0xcc, 0x0c, 0x4c, 0x8c, 0x41, 0x60, 0x61, 0x25, 0x01,
	0x2e, 0x3e, 0xd7, 0xdc, 0x82, 0x92, 0xca, 0xa0, 0xd4, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x23,
	0xa3, 0x60, 0x2e, 0x36, 0x90, 0x89, 0xc5, 0x46, 0x42, 0x9e, 0x5c, 0xec, 0xce, 0x45, 0xa9, 0x89,
	0x25, 0xa9, 0x46, 0x42, 0x02, 0x7a, 0x70, 0x0f, 0xea, 0x81, 0xed, 0x93, 0x92, 0x44, 0x12, 0x41,
	0x35, 0x41, 0x49, 0xb0, 0xe9, 0xf2, 0x93, 0xc9, 0x4c, 0xdc, 0x4a, 0x6c, 0xfa, 0xa5, 0x20, 0x83,
	0xac, 0x18, 0xb5, 0x9c, 0xfc, 0xa3, 0x7c, 0x49, 0xf7, 0x38, 0x46, 0xd0, 0x5b, 0xc3, 0x59, 0x49,
	0x6c, 0x60, 0x6d, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x6c, 0xaf, 0x0f, 0x9a, 0xa0, 0x01,
	0x00, 0x00,
}
